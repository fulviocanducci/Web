@model Canducci.Pagination.Paginated<Models.Car>
@{
   ViewData["Title"] = "Lista de Carros";
}
<h1>Lista de Carros</h1>
<p class="justify-content-center text-center">
   <a asp-action="Create" class="btn btn-primary btn-sm">Novo</a> <button type="button" class="btn btn-secondary btn-sm" onclick="openModal(null)">Modal</button>
</p>
<p>
   <form asp-action="Index" method="get">
      <label class="form-label mb-0">Pesquisar: </label>
      <div class="input-group">
         <input type="text" name="filter" id="filter" value="@(ViewBag?.Filter ?? "")" class="form-control form-control-sm" autofocus />
         <button class="btn btn-primary btn-sm">Filtrar</button>
      </div>
   </form>
</p>
<table class="table table-sm">
   <thead>
      <tr>
         <th class="text-center">
            Id
         </th>
         <th class="text-center">
            Nome
         </th>
         <th class="text-center"></th>
      </tr>
   </thead>
   <tbody>
      @foreach (var item in Model)
      {
         <tr>
            <td class="col-2 text-end">
               @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td class="col-7 text-start">
               @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td class="col-3 text-center">
               @Html.ActionLink("Alterar", "Edit", new { id = item.Id }, new {@class="btn btn-success btn-sm"}) |
               @Html.ActionLink("Detalhes", "Details", new { id = item.Id }, new {@class="btn btn-primary btn-sm"}) |
               @Html.ActionLink("Excluir?", "Delete", new { id = item.Id }, new {@class="btn btn-danger btn-sm"}) |
               <button type="button" class="btn btn-secondary btn-sm" onclick="openModal('@(item.Id)')">Modal</button>
            </td>
         </tr>
      }
   </tbody>
</table>
@if (Model.HasNextPage || Model.HasPreviousPage)
{
   <div>
      <pagination pagination-asp-action="Index"
                  pagination-asp-controller="Car"
                  pagination-style="NumbersWithPreviousNext"
                  pagination-css-class-ul="pagination justify-content-center"
                  pagination-paginated="Model"
                  pagination-label-next="Próximo"
                  pagination-label-previous="Anterior"
                  pagination-css-class-anchor="page-link"
                  pagination-css-class-li="page-item"
                  pagination-css-class-li-disabled="disabled"
                  pagination-asp-route-filter="@(ViewBag?.Filter ?? "")">
      </pagination>
   </div>
}
<form name="form1" id="form1">
   <div class="modal" tabindex="-1" id="myModal">
      <div class="modal-dialog">
         <div class="modal-content">
            <div class="modal-header">
               <h5 class="modal-title">Cadastro/Modificações</h5>
               <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
               <div class="row">

                  <input type="hidden" name="Id" id="Id">
                  <div class="mb-3">
                     <label for="Name" class="form-label">Nome do carro</label>
                     <input type="text" name="Name" id="Name" class="form-control" placeholder="Digite o nome do carro">
                  </div>
               </div>
            </div>
            <div class="modal-footer">
               <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
               <button type="submit" class="btn btn-primary">Salvar</button>
            </div>
         </div>
      </div>
   </div>
</form>
@section Scripts {
   @{
      await Html.RenderPartialAsync("_ValidationScriptsPartial");
   }
   <script>
      var modal = null;
      $(document).ready(function () {
         const myModal = document.getElementById('myModal')
         modal = bootstrap.Modal.getOrCreateInstance(myModal);
         myModal.addEventListener('shown.bs.modal', function (event) {
            $("#form1 #Name").focus();
         });
         $("#form1").validate({
            rules: {
               'Name': {
                  'required': true
               }
            },
            messages: {
               'Name': {
                  'required': 'Digite o nome'
               }
            },
            submitHandler: function (data) {
               $.ajax({
                  url: '/car/addorupdate',
                  type: 'POST',
                  data: $('#form1').serialize(),
                  success: function (result) {
                     modal.hide();
                     alert('Dados aterados com êxito');
                     window.location.reload();
                  }
               });
            },
            errorClass: "is-invalid",
            validClass: "is-valid"
         });
      });
      function emptyModal() {
         $("#form1 #Id").val('0');
         $("#form1 #Name").val('');
      }
      function openModal(id) {
         emptyModal();
         if (id) {
            loadCar(id, function () {
               $("#form1 .modal-title").text('Alterar Cadastro');
               modal.show();
            });
         } else {
            $("#form1 .modal-title").text('Novo Cadastro');
            modal.show();
         }
      }
      function loadCar(id, fn) {
         $.getJSON('/car/load/' + id)
            .done(function (data) {
               $("#form1 #Id").val(data.id);
               $("#form1 #Name").val(data.name);
               fn();
            })
            .fail(function (error) {
               console.log(error);
            });
      }
   </script>
}